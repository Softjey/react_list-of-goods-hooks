{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortField","setSortField","reverse","setReverse","goodsIsReset","preparedGoods","initialGoods","goods","sort","good1","good2","alphabet","localeCompare","length","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,kDAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAA0CC,mBAASH,EAASI,SAAjDC,EAAX,EAAQ,GAAiBC,EAAzB,EAAsB,GACtB,EAAsCH,oBAAS,GAApCI,EAAX,EAAQ,GAAeC,EAAvB,EAAoB,GAEdC,EAAeJ,IAAcL,EAASI,UAAYG,EAClDG,EAhCR,SACEC,EADF,GAGa,IADTN,EACQ,EADRA,UAAWE,EACH,EADGA,QAEPK,EAAK,YAAOD,GAoBlB,OAlBIN,IAAcL,EAASI,SACzBQ,EAAMC,MAAK,SAACC,EAAOC,GACjB,OAAIV,IAAcL,EAASgB,SAClBF,EAAMG,cAAcF,GAGzBV,IAAcL,EAASkB,OAClBJ,EAAMI,OAASH,EAAMG,OAGvB,KAIPX,GACFK,EAAML,UAGDK,EAQeO,CACpBlB,EACA,CAAEI,YAAWE,YAQf,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,IAAcL,EAASgB,UAAY,YAChEM,QAAS,kBAAMhB,EAAaN,EAASgB,WAHvC,iCAQA,wBACEK,KAAK,SACLD,UAAS,4BAAuBf,IAAcL,EAASkB,QAAU,YACjEI,QAAS,kBAAMhB,EAAaN,EAASkB,SAHvC,4BAQA,wBACEG,KAAK,SACLD,UAAS,6BAAwBb,GAAW,YAC5Ce,QAAS,kBAAMd,GAAYD,IAH7B,sBAQEE,GACA,wBACEY,KAAK,SACLD,UAAU,4BACVE,QApCV,WACEhB,EAAaN,EAASI,SACtBI,GAAW,IA+BL,sBAUJ,6BACE,6BACGE,EAAca,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC5GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3a74d22.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  default,\n  alphabet,\n  length,\n}\n\ninterface GoodsDisplayParams {\n  sortField: SortType,\n  reverse: boolean,\n}\n\nfunction getPreparedGoods(\n  initialGoods: string[],\n  { sortField, reverse }: GoodsDisplayParams,\n): string[] {\n  const goods = [...initialGoods];\n\n  if (sortField !== SortType.default) {\n    goods.sort((good1, good2) => {\n      if (sortField === SortType.alphabet) {\n        return good1.localeCompare(good2);\n      }\n\n      if (sortField === SortType.length) {\n        return good1.length - good2.length;\n      }\n\n      return 0;\n    });\n  }\n\n  if (reverse) {\n    goods.reverse();\n  }\n\n  return goods;\n}\n\nexport const App: React.FC = () => {\n  const { 0: sortField, 1: setSortField } = useState(SortType.default);\n  const { 0: reverse, 1: setReverse } = useState(false);\n\n  const goodsIsReset = sortField === SortType.default && !reverse;\n  const preparedGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, reverse },\n  );\n\n  function resetGoods() {\n    setSortField(SortType.default);\n    setReverse(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField !== SortType.alphabet && 'is-light'}`}\n          onClick={() => setSortField(SortType.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField !== SortType.length && 'is-light'}`}\n          onClick={() => setSortField(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reverse && 'is-light'}`}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {!goodsIsReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {preparedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}